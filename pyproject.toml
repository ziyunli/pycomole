[tool.poetry]
name = "pycomole"
version = "0.0.2"
description = "Programming challenge solutions using Python"
authors = [
    "Ziyun Li <me@ziyunli.dev>",
]
license = "MIT"
readme = "README.md"

documentation = "https://ziyunli.github.io/pycomole"
homepage = "https://ziyunli.github.io/pycomole"
repository = "https://github.com/ziyunli/pycomole"

packages = [
    { include = "pycomole", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.11.0, <4.0"
setuptools = "^65.5.1"
ruff = "^0.0.261"

[tool.poetry.dev-dependencies]
black = "*"
mkdocstrings = {version = "*", extras = ["python"]}
mkdocs-material = "*"
pep8-naming = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
pyupgrade = "*"
tryceratops = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.pytest.ini_options]
addopts = """\
    --cov src/cs9 \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.ruff]
# Decrease the maximum line length to 79 characters.
line-length = 79
src = ["src"]
target-version = "py311"
